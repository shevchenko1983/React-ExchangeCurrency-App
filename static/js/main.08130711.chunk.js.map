{"version":3,"sources":["components/Select.js","components/CurrencyRateDescription.js","App.js","api/config.js","reportWebVitals.js","index.js"],"names":["Select","options","action","referrense","name","id","ref","onChange","e","target","map","item","index","value","CurrencyRateDescription","currency","App","useState","currencies","setCurrencies","baseCurrency","setBaseCurrency","currentRateFrom","setCurrentRateFrom","currentRateTo","setCurrentRateTo","result","setResult","inputRef","useRef","defaultCurrencyFrom","defaultCurrencyTo","useEffect","length","axios","then","response","Object","entries","data","rates","base","calculateRate","current","amount","toFixed","className","type","disabled","currCurrency","forEach","rate","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08130711.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Select = ({options, action, referrense}) => {\r\n    return(\r\n        <select name=\"\" id=\"\"\r\n                ref={referrense}\r\n                onChange={(e) => action(e.target)}\r\n        >\r\n            {options?.map((item, index) => {\r\n                return <option key={index + item[0]} value={item[0]}>{item[0]}</option>\r\n            })}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default  Select;","import React from 'react';\r\n\r\nconst CurrencyRateDescription = ({currency, value}) => {\r\n    return(\r\n        <span>{value}<span>{currency}</span></span>\r\n    );\r\n}\r\n\r\nexport default CurrencyRateDescription;","import './App.css';\r\nimport Select from \"./components/Select\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {API_URL} from \"./api/config\";\r\nimport CurrencyRateDescription from \"./components/CurrencyRateDescription\";\r\nimport 'currency-flags/dist/currency-flags.css';\r\n\r\nfunction App() {\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [baseCurrency, setBaseCurrency] = useState(\"EUR\");\r\n  const [currentRateFrom, setCurrentRateFrom] = useState(null);\r\n  const [currentRateTo, setCurrentRateTo] = useState(null);\r\n  const [result, setResult] = useState(0);\r\n  const inputRef = useRef(0);\r\n  const defaultCurrencyFrom = useRef();\r\n  const defaultCurrencyTo = useRef();\r\n\r\n  useEffect(() => {\r\n    if(currencies.length === 0){\r\n        axios(API_URL).then((response) => {\r\n            setCurrencies([...Object.entries(response.data.rates)]);\r\n            setBaseCurrency(response.data.base);\r\n        });\r\n    }\r\n  }, [currencies.length, baseCurrency]);\r\n\r\n  //if updated any rates -> call calculateRate func\r\n  useEffect(() => {\r\n      calculateRate(inputRef.current);\r\n  }, [currentRateFrom, currentRateTo]);\r\n\r\n  //if currentRateFrom and currentRateTo are set by default\r\n  useEffect(() => {\r\n      if(!currentRateFrom && currencies.length > 0){\r\n          setCurrentRateFrom(currencies[0][1]);\r\n      }\r\n      if(!currentRateTo && currencies.length > 0){\r\n          setCurrentRateTo(currencies[0][1]);\r\n      }\r\n  }, [currentRateFrom, currentRateTo, currencies.length]);\r\n\r\n  const getCurrentRateFrom = (currCurrency) => {\r\n      //if found current currency  in array -> return rate of that currency\r\n      currencies.forEach((item) => {\r\n          const rate = item[0] === currCurrency.value && item[1];\r\n          if(rate){\r\n            setCurrentRateFrom(rate);\r\n          }\r\n      });\r\n  };\r\n\r\n    const getCurrentRateTo = (currCurrency) => {\r\n        //if found current currency  in array -> return rate of that currency\r\n        currencies.forEach((item) => {\r\n            const rate = item[0] === currCurrency.value && item[1];\r\n            if(rate){\r\n                setCurrentRateTo(rate);\r\n            }\r\n        });\r\n    };\r\n\r\n  const calculateRate = (e) => {\r\n     const amount = e.value;\r\n     if(amount && amount > 0){\r\n       setResult(((amount / currentRateFrom) * currentRateTo).toFixed(2));\r\n     }else{\r\n       setResult(0);\r\n     }\r\n  };\r\n\r\n  //console.log(currencies, baseCurrency, inputRef)\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h2>Currency Converter</h2>\r\n        <div className=\"currency-container\">\r\n           <h3><CurrencyRateDescription\r\n              currency={defaultCurrencyFrom.current && defaultCurrencyFrom.current.value}\r\n              value={inputRef.current && inputRef.current.value !== '' ? inputRef.current.value : 0}\r\n          />is equivalent to</h3>\r\n          <CurrencyRateDescription\r\n              currency={defaultCurrencyTo.current && defaultCurrencyTo.current.value}\r\n              value={result}\r\n          />\r\n          <div className=\"first-currency\">\r\n              <input type=\"number\"\r\n                     disabled={false}\r\n                     ref={inputRef}\r\n                     onChange={(e) => calculateRate(e.target)}\r\n              />\r\n              <Select options={currencies}\r\n                      action={getCurrentRateFrom}\r\n                      referrense={defaultCurrencyFrom}\r\n              />\r\n              <div className={`currency-flag currency-flag-${defaultCurrencyFrom.current && defaultCurrencyFrom.current.value.toLowerCase()}`}/>\r\n          </div>\r\n\r\n          <div className=\"second-currency\">\r\n              <input type=\"number\"\r\n                     disabled={true}\r\n                     value={result}\r\n              />\r\n              <Select options={currencies}\r\n                      action={getCurrentRateTo}\r\n                      referrense={defaultCurrencyTo}\r\n              />\r\n              <div className={`currency-flag currency-flag-${defaultCurrencyTo.current && defaultCurrencyTo.current.value.toLowerCase()}`}/>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const API_URL = 'https://api.exchangeratesapi.io/latest';","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}